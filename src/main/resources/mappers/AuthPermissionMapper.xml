<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.barton.sbc.dao.auth.AuthPermissionMapper" >
  <resultMap id="BaseResultMap" type="com.barton.sbc.domain.entity.auth.AuthPermission" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="component" property="component" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="TINYINT" />
    <result column="keep_alive" property="keepAlive" jdbcType="TINYINT" />
    <result column="require_auth" property="requireAuth" jdbcType="TINYINT" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    <result column="user_create" property="userCreate" jdbcType="VARCHAR" />
    <result column="user_modified" property="userModified" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, type, icon, component, url, path, parent_id, order_id, keep_alive, require_auth, 
    gmt_create, gmt_modified, user_create, user_modified
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from auth_permission
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from auth_permission
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.barton.sbc.domain.entity.auth.AuthPermission" >
    insert into auth_permission (id, name, type, 
      icon, component, url, 
      path, parent_id, order_id, 
      keep_alive, require_auth, gmt_create, 
      gmt_modified, user_create, user_modified
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{icon,jdbcType=VARCHAR}, #{component,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{path,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{orderId,jdbcType=TINYINT}, 
      #{keepAlive,jdbcType=TINYINT}, #{requireAuth,jdbcType=TINYINT}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP}, #{userCreate,jdbcType=VARCHAR}, #{userModified,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.barton.sbc.domain.entity.auth.AuthPermission" >
    insert into auth_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="component != null" >
        component,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="keepAlive != null" >
        keep_alive,
      </if>
      <if test="requireAuth != null" >
        require_auth,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
      <if test="userCreate != null" >
        user_create,
      </if>
      <if test="userModified != null" >
        user_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="component != null" >
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=TINYINT},
      </if>
      <if test="keepAlive != null" >
        #{keepAlive,jdbcType=TINYINT},
      </if>
      <if test="requireAuth != null" >
        #{requireAuth,jdbcType=TINYINT},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="userCreate != null" >
        #{userCreate,jdbcType=VARCHAR},
      </if>
      <if test="userModified != null" >
        #{userModified,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.barton.sbc.domain.entity.auth.AuthPermission" >
    update auth_permission
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="component != null" >
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=TINYINT},
      </if>
      <if test="keepAlive != null" >
        keep_alive = #{keepAlive,jdbcType=TINYINT},
      </if>
      <if test="requireAuth != null" >
        require_auth = #{requireAuth,jdbcType=TINYINT},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="userCreate != null" >
        user_create = #{userCreate,jdbcType=VARCHAR},
      </if>
      <if test="userModified != null" >
        user_modified = #{userModified,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.barton.sbc.domain.entity.auth.AuthPermission" >
    update auth_permission
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=TINYINT},
      keep_alive = #{keepAlive,jdbcType=TINYINT},
      require_auth = #{requireAuth,jdbcType=TINYINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      user_create = #{userCreate,jdbcType=VARCHAR},
      user_modified = #{userModified,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from auth_permission
  </select>
  <select id="selectByParams" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from auth_permission
    <where>
      <if test="code != null">
        code = #{code}
      </if>
    </where>
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List"/>
    from auth_permission p where p.id in
    (select rp.permission_id from auth_role_permission rp where rp.role_id in (
    select ur.role_id from auth_user_role ur where ur.user_id = #{userId}
    ))
    order by p.order_id ASC
  </select>
  <select id="selectByRoleId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List"/>
    from auth_permission p where p.id in
    (select rp.permission_id from auth_role_permission rp where rp.role_id = #{roleId})
    order by p.order_id ASC
  </select>
</mapper>